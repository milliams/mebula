# SPDX-FileCopyrightText: Â© 2020 Matt Williams <matt@milliams.com>
# SPDX-License-Identifier: MIT

name: CI

on: [push]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: pip install poetry
      - name: Setup package
        run: poetry install -E azure -E google -E oracle
      - name: Run flake8
        run: poetry run flake8
      - name: Run mypy
        run: poetry run mypy mebula tests
      - name: Run black
        run: poetry run black --check .
      - name: Run pytest
        run: poetry run coverage run --source=mebula -m pytest --doctest-modules
      - name: Report coverage
        run: poetry run coverage report
      - name: Install resuse
        run: pip install reuse
      - name: Check REUSE spec
        run: reuse lint
      - name: Test that package builds
        run: poetry build
  release:
    runs-on: ubuntu-latest
    needs: unit-tests
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.x"
      - name: Install Poetry
        run: pip install poetry
      - name: Build package
        run: poetry build
      - name: Get the version
        id: get_version
        run: echo ::set-output name=version::${GITHUB_REF#refs/tags/}
      - name: Create Release ${{ github.ref }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: ${{ steps.get_version.outputs.version }}
          # body:  # TODO Read this from the CHANGELOG
          draft: false
          prerelease: false
      - name: Set PyPI credentials
        run: poetry config pypi-token.pypi ${PYPI_TOKEN}
        env:
          PYPI_TOKEN: ${{ secrets.pypi_token }}
      - name: Publish
        run: poetry publish
